<Page
    x:Class="Barembo.UnoApp.Shared.Views.BookEntriesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Barembo.UnoApp.Shared.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    xmlns:prismMvvm="using:Prism.Mvvm" xmlns:viewmodels="using:Barembo.App.Core.ViewModels"
    xmlns:toolkit="using:Uno.UI.Toolkit"
    xmlns:baremboControls="using:Barembo.UnoApp.Shared.Controls"
    xmlns:myResources="using:Barembo.UnoApp.Shared.Resources"
    prismMvvm:ViewModelLocator.AutowireViewModel="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <myResources:DataTemplates/>
    </Page.Resources>
    <Grid>
        <Grid.Resources>
            <Storyboard x:Name="HideEntryDetailsStoryboard">
                <DoubleAnimation Storyboard.TargetName="EntryDetails" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.250" />
            </Storyboard>
            <Storyboard x:Name="ShowEntryDetailsStoryboard">
                <DoubleAnimation Storyboard.TargetName="EntryDetails" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.250" />
            </Storyboard>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <!--It is important that the Heights have fixed values! Setting them to AUTO-->
            <RowDefinition Height="30"/>
            <!--would lead the ListView to be as high as it wants destroying the lazy loading-->
            <RowDefinition Height="*"/>
            <!--of entries. It would load all entries making the view unusable!-->
        </Grid.RowDefinitions>

        <TextBlock Text="Entries" Grid.Row="0"/>
        <Button x:Uid="GoBackButton" Content="Go back" Command="{Binding GoBackCommand}" Grid.Row="1"/>
        <ListView x:Name="EntriesList"
                  ItemsSource="{Binding Entries, Mode=OneWay}" Grid.Row="2" SelectionMode="Single"
                  SelectionChanged="EntrySelected" SelectedItem="{Binding SelectedEntry, Mode=TwoWay}"
                  ItemTemplate="{StaticResource EntryViewModelDataTemplate}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Grid Grid.RowSpan="3" Background="{StaticResource BaremboGreen}" x:Name="EntryDetails" Opacity="0" IsHitTestVisible="False"
              DataContext="{Binding SelectedEntry}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0" Click="CloseEntryDetails">
                <SymbolIcon Symbol="Back"/>
            </Button>
            <ContentPresenter Grid.Row="1" ContentTemplate="{StaticResource EntryViewModelDataTemplate}"/>
        </Grid>
        <!--<Grid Grid.RowSpan="3" Background="{StaticResource BaremboGreen}" x:Name="EntryDetails" Opacity="0" IsHitTestVisible="False"
              DataTemplate="{Stat}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="1" Text="{Binding SelectedEntry.Header, Mode=OneWay}" FontWeight="Bold" HorizontalAlignment="Left" FontSize="20" Margin="10,0" />

            <Button  Grid.Row="2" Content="LEAVE" Click="CloseEntryDetails"/>

        </Grid>-->
    </Grid>
</Page>
