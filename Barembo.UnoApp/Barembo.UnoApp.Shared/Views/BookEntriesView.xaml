<Page
    x:Class="Barembo.UnoApp.Shared.Views.BookEntriesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Barembo.UnoApp.Shared.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    xmlns:prismMvvm="using:Prism.Mvvm" xmlns:viewmodels="using:Barembo.App.Core.ViewModels"
    xmlns:toolkit="using:Uno.UI.Toolkit"
    xmlns:baremboControls="using:Barembo.UnoApp.Shared.Controls"
    prismMvvm:ViewModelLocator.AutowireViewModel="True"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/> <!--It is important that the Heights have fixed values! Setting them to AUTO-->
            <RowDefinition Height="30"/> <!--would lead the ListView to be as high as it wants destroying the lazy loading-->
            <RowDefinition Height="*"/>  <!--of entries. It would load all entries making the view unusable!-->
        </Grid.RowDefinitions>

        <TextBlock Text="Entries" Grid.Row="0"/>
        <Button x:Uid="GoBackButton" Content="Go back" Command="{Binding GoBackCommand}" Grid.Row="1"/>
        <ListView ItemsSource="{Binding Entries, Mode=OneWay}" Grid.Row="2" SelectionMode="None">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="viewmodels:EntryViewModel">
                    <Grid HorizontalAlignment="Stretch" Margin="10">
                        <ProgressRing IsActive="True" Visibility="{x:Bind IsLoading, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" MinHeight="400"/>
                        <toolkit:ElevatedView Elevation="10" CornerRadius="3">
                            <StackPanel Visibility="{x:Bind IsLoading, Mode=OneWay, Converter={StaticResource BooleanToVisibilityInvertedConverter}, FallbackValue=Collapsed}" HorizontalAlignment="Stretch" MaxWidth="740"
                                    Background="LightGray" BorderBrush="Gray" BorderThickness="2" Padding="10" CornerRadius="10,10,10,10">
                                <TextBlock Text="{x:Bind CreationDate, Mode=OneWay, Converter={StaticResource DateTimeConverter}}" x:Phase="1" HorizontalAlignment="Right" Margin="0,0,0,10" FontWeight="Normal"/>
                                <TextBlock Text="{x:Bind Header, Mode=OneWay}" x:Phase="0" FontWeight="Bold" HorizontalAlignment="Center" FontSize="16"/>
                                <Border CornerRadius="50,5,50,5" MaxWidth="600" MaxHeight="500">
                                    <Image Source="{x:Bind Thumbnail, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" x:Phase="2" 
                                           
                                          />
                                </Border>
                                <!--ToDo: Visibility-Field for Thumbnail-->
                                <!--CornerRadius="50,5,50,5" EnableLazyLoading="true"-->
                                <TextBlock Text="{x:Bind Body, Mode=OneWay}" x:Phase="1" MaxWidth="600" TextWrapping="WrapWholeWords" HorizontalAlignment="Stretch" FontStretch="Expanded" Margin="0,10,0,10"/>
                                <ListView ItemsSource="{x:Bind AttachmentPreviews, Mode=OneWay}" x:Phase="3" SelectionMode="None">
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="viewmodels:AttachmentPreviewViewModel">
                                            <Grid>
                                                <Border CornerRadius="5" MaxWidth="150">
                                                    <Image Source="{x:Bind ImagePreview, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" Visibility="{x:Bind IsImage, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                                           />
                                                </Border>
                                                <!--EnableLazyLoading="true" CornerRadius="5"-->
                                                <baremboControls:VideoPreviewControl Visibility="{x:Bind IsVideo, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                                                                     Image1="{x:Bind VideoPreview1, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     Image2="{x:Bind VideoPreview2, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     Image3="{x:Bind VideoPreview3, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     Image4="{x:Bind VideoPreview4, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     Image5="{x:Bind VideoPreview5, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     Image6="{x:Bind VideoPreview6, Mode=OneWay, Converter={StaticResource ByteArrayToBitmapImageConverter}}" 
                                                                                     MaxWidth="150" /> <!--ToDo: Show video if video is in cache or on disk?-->
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <controls:WrapPanel Padding="0,0,0,0"
                                                        VerticalSpacing="7"
                                                        HorizontalSpacing="6" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ListView>
                            </StackPanel>
                        </toolkit:ElevatedView>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>
